services:

  api_gateway:
    container_name: api_gateway
    build: ./api_gateway
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - USER_SERVICE_URL=http://user_api:5001
      - AUTH_SERVICE_URL=http://authentification_api:5002
      - CLIENT_SERVICE_URL=http://client_api:5003
      - ITEM_SERVICE_URL=http://item_api:5004
      - LOGS_SERVICE_URL=http://logs_api:5050
      - STOCK_SERVICE_URL=http://stock_api:5008
    networks:
      - app-network
    depends_on:
      - user_api
      - authentification_api
      - client_api
      - item_api
      - logs_api
      - client_redis

  logs_api:
    container_name: logs_api
    build:
      context: ./backend/logs_api
      dockerfile: Dockerfile
    ports:
      - "5050:5050"
    volumes:
      - ./backend/logs_api:/app
      - ./backend/logs_api/logs:/app/logs
      - /app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - app-network
    depends_on:
      - client_redis

  authentification_api:
    container_name: authentification_api
    build:
      context: ./backend/authentification_api
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    environment:
      - DB_USER=sjordan
      - DB_HOST=host.docker.internal
      - DB_NAME=SLI
      - DB_PASSWORD=mdp
      - DB_PORT=5432
    depends_on:
      - client_redis
    volumes:
      - ./backend/authentification_api:/app
      - /app/node_modules
      - ./backend/authentification_api/logs:/app/logs
    networks:
      - app-network

  user_api:
    container_name: user_api
    build:
      context: ./backend/user_api
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - DB_USER=sjordan
      - DB_HOST=host.docker.internal
      - DB_NAME=SLI
      - DB_PASSWORD=mdp
      - DB_PORT=5432
    depends_on:
      - client_redis
    volumes:
      - ./backend/user_api:/app
      - /app/node_modules
      - ./backend/middlewares:/app/middlewares 
    networks:
      - app-network

  client_api:
    container_name: client_api
    build:
      context: ./backend/client_api
      dockerfile: Dockerfile
    ports:
      - "5003:5003"
    environment:
      - DB_USER=sjordan
      - DB_HOST=host.docker.internal
      - DB_NAME=SLI
      - DB_PASSWORD=mdp
      - DB_PORT=5432
      - REDIS_URL=redis://client_redis:6379
    volumes:
      - ./backend/client_api:/app
      - /app/node_modules
      - ./backend/client_api/logs:/app/logs
    networks:
      - app-network
    depends_on:
      - client_redis

  item_api:
    container_name: item_api
    build:
      context: ./backend/item_api
      dockerfile: Dockerfile
    ports:
      - "5004:5004"
    environment:
      - DB_USER=sjordan
      - DB_HOST=host.docker.internal
      - DB_NAME=SLI
      - DB_PASSWORD=mdp
      - DB_PORT=5432
    depends_on:
      - client_redis
    volumes:
      - ./backend/item_api:/app
      - /app/node_modules
      - ./backend/middlewares:/app/middlewares
    networks:
      - app-network

  stock_api:
    container_name: stock_api
    build:
      context: ./backend/stock_api
      dockerfile: Dockerfile
    ports:
      - "5008:5008"
    environment:
      - DB_USER=sjordan
      - DB_HOST=host.docker.internal
      - DB_NAME=SLI
      - DB_PASSWORD=mdp
      - DB_PORT=5432
    depends_on:
      - client_redis
    volumes:
      - ./backend/stock_api:/app
      - /app/node_modules
      - ./backend/stock_api/logs:/app/logs
    networks:
      - app-network

  client_redis:
    image: redis:6.2
    container_name: client_redis
    volumes:
      - client_redis_data:/data
    networks:
      - app-network

  landing_page:
    image: node:20-alpine
    container_name: landing_page
    ports:
      - 5173:5173
    volumes:
      - ./landing_page:/app
    working_dir: /app
    networks:
      - app-network
    depends_on:
      - api_gateway
    command: npm run setup


networks:
  app-network:
    driver: bridge

volumes:
  client_redis_data:
    driver: local
